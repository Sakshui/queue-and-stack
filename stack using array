class ArrayStack {
    private int[] stack;
    private int top;
    private int capacity;

    public ArrayStack(int capacity) {
        this.capacity = capacity;
        stack = new int[capacity];
        top = -1; // Stack is initially empty
    }

    // Add an item to the top of the stack
    public void push(int item) {
        if (top == capacity - 1) {
            System.out.println("Stack is full");
            return;
        }
        stack[++top] = item;
    }

    // Remove and return the top item from the stack
    public int pop() {
        if (top == -1) {
            System.out.println("Stack is empty");
            return -1; // Or throw an exception
        }
        return stack[top--];
    }

    // Return the top item without removing it
    public int peek() {
        if (top == -1) {
            System.out.println("Stack is empty");
            return -1; // Or throw an exception
        }
        return stack[top];
    }

    // Check if the stack is empty
    public boolean isEmpty() {
        return top == -1;
    }

    // Get the size of the stack
    public int size() {
        return top + 1;
    }
}

// Example usage
public class Main {
    public static void main(String[] args) {
        ArrayStack stack = new ArrayStack(5);

        stack.push(10);
        stack.push(20);
        stack.push(30);

        System.out.println("Top item: " + stack.peek());
        System.out.println("Popped: " + stack.pop());
        System.out.println("New top item: " + stack.peek());
        System.out.println("Stack size: " + stack.size());
    }
}
